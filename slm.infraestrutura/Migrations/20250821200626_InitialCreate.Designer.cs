// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using slm.infraestrutura;

#nullable disable

namespace slm.infraestrutura.Migrations
{
    [DbContext(typeof(SlmDbContext))]
    [Migration("20250821200626_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Slm.Domain.Entidades.Entregador", b =>
                {
                    b.Property<string>("identificador")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("identificador");

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cnpj");

                    b.Property<DateTime>("data_nascimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("imagem_cnh")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("imagem_cnh");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome");

                    b.Property<string>("numero_cnh")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("numero_cnh");

                    b.Property<string>("tipo_cnh")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("tipo_cnh");

                    b.HasKey("identificador");

                    b.ToTable("entregadores");
                });

            modelBuilder.Entity("Slm.Domain.Entidades.Locacao", b =>
                {
                    b.Property<string>("Identificador")
                        .HasColumnType("text")
                        .HasColumnName("identificador");

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_devolucao");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_inicio");

                    b.Property<DateTime>("DataPrevisaoTermino")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_previsao_termino");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_termino");

                    b.Property<string>("EntregadorId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("entregador_id");

                    b.Property<string>("MotoId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("moto_id");

                    b.Property<int>("Plano")
                        .HasColumnType("integer")
                        .HasColumnName("plano");

                    b.Property<decimal>("ValorDiaria")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_diaria");

                    b.Property<decimal?>("ValorTotal")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_total");

                    b.HasKey("Identificador");

                    b.ToTable("locacao");
                });

            modelBuilder.Entity("Slm.Domain.Entidades.Moto", b =>
                {
                    b.Property<string>("Identificador")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("identificador");

                    b.Property<int>("Ano")
                        .HasColumnType("integer")
                        .HasColumnName("ano");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modelo");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("placa");

                    b.HasKey("Identificador");

                    b.ToTable("motos");
                });
#pragma warning restore 612, 618
        }
    }
}
